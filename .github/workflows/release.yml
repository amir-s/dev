name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers only on version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: windows
            architecture: x86_64
            target: x86_64-pc-windows-msvc
            extension: .exe
          - os: macos
            architecture: x86_64
            target: x86_64-apple-darwin
            extension: ""
          - os: macos
            architecture: arm64
            target: aarch64-apple-darwin
            extension: ""
          - os: linux
            architecture: x86_64
            target: x86_64-unknown-linux-gnu
            extension: ""
          - os: linux
            architecture: arm64
            target: aarch64-unknown-linux-gnu
            extension: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 2.x

      - name: Build for ${{ matrix.os }}-${{ matrix.architecture }}
        run: |
          deno compile -A --target ${{ matrix.target }} --output dev-${{ matrix.os }}-${{ matrix.architecture }}${{ matrix.extension }} main.ts

      - name: Archive binary
        run: |
          zip -r dev-${{ matrix.os }}-${{ matrix.architecture }}.zip dev-${{ matrix.os }}-${{ matrix.architecture }}${{ matrix.extension }}
        shell: bash

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dev-${{ matrix.os }}-${{ matrix.architecture }}
          path: dev-${{ matrix.os }}-${{ matrix.architecture }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
